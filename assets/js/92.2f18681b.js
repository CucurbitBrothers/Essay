(window.webpackJsonp=window.webpackJsonp||[]).push([[92],{458:function(v,_,t){"use strict";t.r(_);var l=t(44),i=Object(l.a)({},(function(){var v=this,_=v.$createElement,t=v._self._c||_;return t("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[t("h1",{attrs:{id:"基础-05-基本数据类型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#基础-05-基本数据类型"}},[v._v("#")]),v._v(" 基础 05-基本数据类型")]),v._v(" "),t("p",[t("strong",[v._v("问题")])]),v._v(" "),t("ol",[t("li",[v._v("set，list区别\n"),t("ol",[t("li",[v._v("List")]),v._v(" "),t("li",[v._v("Set")])])])]),v._v(" "),t("ul",[t("li",[t("p",[t("strong",[v._v("前言")])]),v._v(" "),t("ul",[t("li",[v._v("有序的数据类型： 字符串，列表，元组")]),v._v(" "),t("li",[v._v("无序的数据类型： 字典，集合")]),v._v(" "),t("li",[v._v("区间问题\n"),t("ul",[t("li",[v._v("randint(a,b)          -> [a, b]")]),v._v(" "),t("li",[v._v("range(a,b)            -> [a,b)")]),v._v(" "),t("li",[v._v("[a:b]（切片操作） -> [a,b)")])])])])]),v._v(" "),t("li",[t("p",[t("strong",[v._v("字符串")])])])]),v._v(" "),t("p",[t("strong",[v._v("常用操作")])]),v._v(" "),t("ol",[t("li",[t("span",{staticStyle:{"background-color":"#ffaaaa"}},[v._v("python 字符串快速逆置")]),v._v(" "),t("ol",[t("li",[t("span",{staticStyle:{"background-color":"#ffaaaa"}},[v._v("print(s[::-1])  # 从后向前，按步长为1进行取值")])])])]),v._v(" "),t("li",[v._v('basestring. \nmystr.split(str=" ", maxsplit=2)\n以 str 为分隔符切片 mystr，如果 maxsplit有指定值，则仅分隔 maxsplit 个子字符串，结果为列表，len 为 maxsplit + 1')]),v._v(" "),t("li",[t("span",{staticStyle:{"background-color":"#ffaaaa"}},[v._v("'str'.join(seq)")]),v._v(" "),t("ol",[t("li",[v._v("以str为分隔符，将seq中的所有元素合并成一个新的字符串")]),v._v(" "),t("li",[v._v("返回值：以分隔符str连接各个元素好生成的字符串")]),v._v(" "),t("li",[v._v("使用 “+” 效率较低，建议使用join")])])]),v._v(" "),t("li",[v._v("查找：\n"),t("ol",[t("li",[v._v('str.find( "" )        返回索引,不存在返回-1')]),v._v(" "),t("li",[v._v("index                  ........,不存在会报异常(ValueError)")])])]),v._v(" "),t("li",[v._v("替换：\nstr.replace(str1, str2, count) count为替换次数")]),v._v(" "),t("li",[v._v("'str'.strip 删除str字符串两端的空白字符")])]),v._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[v._v("                    str='cast'\n                    rel=str.strip(\"ct\")\n                    print(rel)\n")])])]),t("p",[v._v("结果：  as")]),v._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[v._v('                    my_string = "wwwfewww"\n                    result = my_string.strip("w")\n')])])]),t("p",[v._v("结果: fe")]),v._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[v._v('                    my_string = "ww wew ww"\n                    result = my_string.strip("w")\n')])])]),t("p",[v._v("结果:  wew (前后有空格)")]),v._v(" "),t("ul",[t("li",[v._v("** 列表**")])]),v._v(" "),t("ol",[t("li",[v._v('添加元素("增"append, extend, insert)\n'),t("ol",[t("li",[v._v("列表名.insert(index, 数据)：在指定位置插入数据(位置前有空元素会补位)")]),v._v(" "),t("li",[v._v("现有的列表下标是0-4，如果我们要在下标是6的地方插入数据，那个会自动插入到下标为5的地方，也就是插入到最后")])])]),v._v(" "),t("li",[v._v("列表的排序\n"),t("ol",[t("li",[v._v("sort 将list按特定顺序排序，默认从小到大， 参数reverse=True 可以改为倒序，由大到小\n"),t("ol",[t("li",[v._v("sort为永久性排序")]),v._v(" "),t("li",[v._v("内置sorted（），临时排序，不会修改原来数据")])])]),v._v(" "),t("li",[v._v("reverse 方法是将列表逆置。")])])]),v._v(" "),t("li",[v._v("类表的删除")])]),v._v(" "),t("table",[t("thead",[t("tr",[t("th",[v._v("del my_list[2]")]),v._v(" "),t("th",[v._v("删除指定索引的元素")])])]),v._v(" "),t("tbody",[t("tr",[t("td",[v._v("my_list.pop( )")]),v._v(" "),t("td",[v._v("删除列表最后一个元素,并返回删除的元素")])]),v._v(" "),t("tr",[t("td",[v._v("remove( 元素 )")]),v._v(" "),t("td",[v._v("删除第一个出现的指定元素")])]),v._v(" "),t("tr",[t("td",[v._v("clear( )")]),v._v(" "),t("td",[v._v("清空列表")])]),v._v(" "),t("tr",[t("td"),v._v(" "),t("td")])])]),v._v(" "),t("ul",[t("li",[t("p",[t("strong",[v._v("元组（Tuple）")])]),v._v(" "),t("ul",[t("li",[v._v("元组的元素不能修改、删除")]),v._v(" "),t("li",[v._v("创建一个有且仅有一个元素的元组，\n"),t("ul",[t("li",[v._v("格式：  元组名 = （元素1，）")])])])])]),v._v(" "),t("li",[t("p",[v._v("元组的意义： 保证数据安全。")])]),v._v(" "),t("li",[t("p",[t("strong",[v._v("字典（dictionary）")])]),v._v(" "),t("ul",[t("li",[v._v("字典的key可以是任意数据类型，但不能是可变数据类型，而且不可变的数据类型中某个元素也不能是可变的，\n"),t("ul",[t("li",[v._v("例：（1,2，[1,2]）")])])]),v._v(" "),t("li",[v._v("根据键访问值(key唯一)，若键不存在，会报错。\n"),t("ul",[t("li",[v._v("age = info.get('age', 18)\n            若info中不存在'age'这个键，就返回默认值18，不会对字典做任何操作，若没有返回值，返回None")])])])])])]),v._v(" "),t("p",[v._v("若info中存在'age'这个键，就返回对应的值")]),v._v(" "),t("p"),v._v(" "),t("ul",[t("li",[v._v("age = info.setdefault('age', 18) #")])]),v._v(" "),t("p",[v._v("若info中不存在'age'这个键，就返回默认值18，并把该键值对插入字典中，若没有返回值，返回None")]),v._v(" "),t("p",[v._v("若info中存在'age'这个键，就返回对应的值")]),v._v(" "),t("ul",[t("li",[v._v("删除字典：\n"),t("ol",[t("li",[v._v("del  info /  info.clear()                   删除（清空字典）")]),v._v(" "),t("li",[v._v("del info[key]                                  删除指定键值对，key 不存在会报错，")]),v._v(" "),t("li",[v._v("info.pop(key[,default])                  删除指定键值对，key 若不存在,返回default值，不设返回值会报错")]),v._v(" "),t("li",[v._v("popiteam(）                                  随机返回并删除字典中的一个键值对")])])])]),v._v(" "),t("p"),v._v(" "),t("ul",[t("li",[v._v("字典的其他内置函数")])]),v._v(" "),t("table",[t("thead",[t("tr",[t("th",[v._v("dict.copy()")]),v._v(" "),t("th",[v._v("返回一个字典的浅复制")])])]),v._v(" "),t("tbody",[t("tr",[t("td",[v._v("dict.fromkeys(seq[, val])")]),v._v(" "),t("td",[v._v("创建一个新字典，以序列 seq 中元素做字典的键，val 为字典所有键对应的初始值")])]),v._v(" "),t("tr",[t("td",[v._v("dict.update(dict2)")]),v._v(" "),t("td",[v._v("把字典dict2的键/值对更新到dict里（key相同的话会覆盖之前的value）")])]),v._v(" "),t("tr",[t("td",[v._v("dict.has_key(key)")]),v._v(" "),t("td",[v._v("如果键在字典dict里返回true，否则返回false")])]),v._v(" "),t("tr",[t("td",[v._v("dict.get(key, default=None)")]),v._v(" "),t("td",[v._v("返回指定键的值，如果值不在字典中返回default值")])]),v._v(" "),t("tr",[t("td",[v._v("dict.setdefault(key, default=None)")]),v._v(" "),t("td",[v._v("和get()类似, 但如果键不存在于字典中，将会添加键并将值设为default")])]),v._v(" "),t("tr",[t("td",[v._v("dict.keys()")]),v._v(" "),t("td",[v._v("以列表返回一个字典所有的键")])]),v._v(" "),t("tr",[t("td",[v._v("dict.values()")]),v._v(" "),t("td",[v._v("以列表返回字典中的所有值")])]),v._v(" "),t("tr",[t("td",[v._v("dict.items()")]),v._v(" "),t("td",[v._v('返回列表 [("键", "值").............]')])])])]),v._v(" "),t("ul",[t("li",[t("p",[t("strong",[v._v("集合")])]),v._v(" "),t("ul",[t("li",[v._v("特点\n"),t("ol",[t("li",[v._v("合是无序的，元素唯一，")]),v._v(" "),t("li",[v._v("集合可以保存任意不可变的数据类型")])])]),v._v(" "),t("li",[v._v("定义空集合  \n             my_set = set()\n"),t("ul",[t("li",[v._v("set.add(),添加单个任意元素，                                                                              -----》")]),v._v(" "),t("li",[v._v("set.update()，把要传入的元素（字符串）拆分，作为个体（字符）传入集合         -----》")])])]),v._v(" "),t("li",[t("span",{staticStyle:{"background-color":"#ffaaaa"}},[v._v("删除元素")]),v._v(" "),t("ul",[t("li",[v._v("set.remove()          删除集合中的元素，如果有，直接删除，没有会报错。")]),v._v(" "),t("li",[v._v("set.discard()          删除集合中的元素，如果有，直接删除，没有的话不做操作。")]),v._v(" "),t("li",[v._v("set.pop()               随机删除集合中的元素，如果集合中没有元素，会报错。")])])]),v._v(" "),t("li",[v._v("交集（&）并集 （ | ） 差集（ - ）对称差集（ ^ ）")])])]),v._v(" "),t("li",[t("p",[t("span",{staticStyle:{"background-color":"#ffaaaa"}},[v._v("enumarate() 用于将一个可遍历的数据对象（如列表，元组，字符串等）组合成一个索引序列，同时列出数据和下标，一般用于for循环")])])]),v._v(" "),t("li",[t("p",[t("strong",[v._v("公共方法")])])])]),v._v(" "),t("table",[t("thead",[t("tr",[t("th",[v._v("运算符")]),v._v(" "),t("th",[v._v("表达式")]),v._v(" "),t("th",[v._v("结果")]),v._v(" "),t("th",[v._v("描述")]),v._v(" "),t("th",[v._v("支持的数据类型")])])]),v._v(" "),t("tbody",[t("tr",[t("td",[v._v("+")]),v._v(" "),t("td",[v._v("[2] + [3, 4]")]),v._v(" "),t("td",[v._v("[1, 2, 3, 4]")]),v._v(" "),t("td",[v._v("合并")]),v._v(" "),t("td",[v._v("字符串、列表、元组")])]),v._v(" "),t("tr",[t("td",[v._v("*")]),v._v(" "),t("td",[v._v("['Hi!'] * 4")]),v._v(" "),t("td",[v._v("['Hi!', 'Hi!', 'Hi!', 'Hi!']")]),v._v(" "),t("td",[v._v("复制")]),v._v(" "),t("td",[v._v("字符串、列表、元组")])]),v._v(" "),t("tr",[t("td",[v._v("in")]),v._v(" "),t("td",[v._v("1 in (1, 2, 3)")]),v._v(" "),t("td",[v._v("True")]),v._v(" "),t("td",[v._v("元素是否存在")]),v._v(" "),t("td",[v._v("字符串、列表、元组、字典")])]),v._v(" "),t("tr",[t("td",[v._v("not in")]),v._v(" "),t("td",[v._v("5 not in (1, 2, 3)")]),v._v(" "),t("td",[v._v("True")]),v._v(" "),t("td",[v._v("元素是否不存在")]),v._v(" "),t("td",[v._v("字符串、列表、元组、字典")])])])]),v._v(" "),t("ul",[t("li",[t("strong",[v._v("内置函数")]),v._v(" "),t("ul",[t("li",[v._v("len(item),")]),v._v(" "),t("li",[v._v("max(item),")]),v._v(" "),t("li",[v._v("min(item),")]),v._v(" "),t("li",[v._v("del(item)")]),v._v(" "),t("li",[v._v("len操作字典时，返回的是键值对的个数")]),v._v(" "),t("li",[v._v("del有两种用法，一种是del加空格，另一种是del()")])])])]),v._v(" "),t("p",[v._v("del a   /   del( a )")]),v._v(" "),t("ul",[t("li",[v._v("zip( )   将可迭代的对象作为参数，将对象中对应的元素打包成一个个元组，然后返回由这些元组组成的对象，这样做的好处是节约了不少的内存\n"),t("ul",[t("li",[v._v("zip")])])])]),v._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[v._v(">>>a = [1,2,3] \n>>> b = [4,5,6]\n>>> c = [4,5,6,7,8] \n>>> zipped = zip(a,b) # 返回一个对象 \n>>> zipped <zip object at 0x103abc288>\n>>> list(zipped) # list() 转换为列表 [(1, 4), (2, 5), (3, 6)] \n>>> list(zip(a,c)) # 元素个数与最短的列表一致 [(1, 4), (2, 5), (3, 6)] \n>>> a1, a2 = zip(*zip(a,b)) # 与 zip 相反，*zip 可理解为解压，返回二维矩阵式 \n>>> list(a1) [1, 2, 3] \n>>> list(a2) [4, 5, 6] \n")])])]),t("ul",[t("li",[t("strong",[v._v("字典和列表的不同以及使用字典的目的")])])]),v._v(" "),t("ol",[t("li",[v._v("list是有序的，dict是无序的")]),v._v(" "),t("li",[v._v("list通过索引访问，dict使用key访问")]),v._v(" "),t("li",[v._v("list随着数量的正常增长要想查找元素的时间复杂度为O(n),dict不随数量而增长而变化，时间复杂度为O(1)")]),v._v(" "),t("li",[v._v("dict的占用内存稍比list大，会在1.5倍左右")]),v._v(" "),t("li",[v._v("dict的可读性更高")])]),v._v(" "),t("p"),v._v(" "),t("p",[v._v("特征决定用途：list一般可作为队列、堆栈使用，而dict一般作为聚合统计或者快速使用特征访问，可以存储一些有标识性的数据等")])])}),[],!1,null,null,null);_.default=i.exports}}]);